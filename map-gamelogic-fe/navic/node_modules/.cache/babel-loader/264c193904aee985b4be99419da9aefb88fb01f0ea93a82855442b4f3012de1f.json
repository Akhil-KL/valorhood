{"ast":null,"code":"var _window,_window$location,_window2,_window2$location;// src/socket.js\nimport{io}from\"socket.io-client\";// Detect environment\nconst isDev=process.env.NODE_ENV===\"development\";const hostname=((_window=window)===null||_window===void 0?void 0:(_window$location=_window.location)===null||_window$location===void 0?void 0:_window$location.hostname)||\"localhost\";const protocol=((_window2=window)===null||_window2===void 0?void 0:(_window2$location=_window2.location)===null||_window2$location===void 0?void 0:_window2$location.protocol)||\"http:\";// Dynamic socket URL construction\nlet SERVER_URL;if(isDev){// ‚úÖ DEVELOPMENT: replace this with your actual local IP when testing on devices\nSERVER_URL=\"http://172.24.3.238:3000\";// üëà Replace with your local server IP if needed\n}else{// ‚úÖ PRODUCTION: use current hostname and protocol\nSERVER_URL=`${protocol}//${hostname}:3000`;}console.log(\"üîå Connecting to socket server at:\",SERVER_URL);// Create socket connection\nconst socket=io(SERVER_URL,{transports:[\"websocket\",\"polling\"],reconnectionAttempts:5,reconnectionDelay:1000,timeout:20000});// Debug error listener\nsocket.on(\"connect_error\",error=>{console.error(\"‚ùå Socket connection error:\",error.message||error);});export default socket;","map":{"version":3,"names":["io","isDev","process","env","NODE_ENV","hostname","_window","window","_window$location","location","protocol","_window2","_window2$location","SERVER_URL","console","log","socket","transports","reconnectionAttempts","reconnectionDelay","timeout","on","error","message"],"sources":["E:/navic/src/socket.js"],"sourcesContent":["// src/socket.js\r\nimport { io } from \"socket.io-client\";\r\n\r\n// Detect environment\r\nconst isDev = process.env.NODE_ENV === \"development\";\r\nconst hostname = window?.location?.hostname || \"localhost\";\r\nconst protocol = window?.location?.protocol || \"http:\";\r\n\r\n// Dynamic socket URL construction\r\nlet SERVER_URL;\r\n\r\nif (isDev) {\r\n  // ‚úÖ DEVELOPMENT: replace this with your actual local IP when testing on devices\r\n  SERVER_URL = \"http://172.24.3.238:3000\"; // üëà Replace with your local server IP if needed\r\n} else {\r\n  // ‚úÖ PRODUCTION: use current hostname and protocol\r\n  SERVER_URL = `${protocol}//${hostname}:3000`;\r\n}\r\n\r\nconsole.log(\"üîå Connecting to socket server at:\", SERVER_URL);\r\n\r\n// Create socket connection\r\nconst socket = io(SERVER_URL, {\r\n  transports: [\"websocket\", \"polling\"],\r\n  reconnectionAttempts: 5,\r\n  reconnectionDelay: 1000,\r\n  timeout: 20000,\r\n});\r\n\r\n// Debug error listener\r\nsocket.on(\"connect_error\", (error) => {\r\n  console.error(\"‚ùå Socket connection error:\", error.message || error);\r\n});\r\n\r\nexport default socket;\r\n"],"mappings":"wDAAA;AACA,OAASA,EAAE,KAAQ,kBAAkB,CAErC;AACA,KAAM,CAAAC,KAAK,CAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,aAAa,CACpD,KAAM,CAAAC,QAAQ,CAAG,EAAAC,OAAA,CAAAC,MAAM,UAAAD,OAAA,kBAAAE,gBAAA,CAANF,OAAA,CAAQG,QAAQ,UAAAD,gBAAA,iBAAhBA,gBAAA,CAAkBH,QAAQ,GAAI,WAAW,CAC1D,KAAM,CAAAK,QAAQ,CAAG,EAAAC,QAAA,CAAAJ,MAAM,UAAAI,QAAA,kBAAAC,iBAAA,CAAND,QAAA,CAAQF,QAAQ,UAAAG,iBAAA,iBAAhBA,iBAAA,CAAkBF,QAAQ,GAAI,OAAO,CAEtD;AACA,GAAI,CAAAG,UAAU,CAEd,GAAIZ,KAAK,CAAE,CACT;AACAY,UAAU,CAAG,0BAA0B,CAAE;AAC3C,CAAC,IAAM,CACL;AACAA,UAAU,CAAG,GAAGH,QAAQ,KAAKL,QAAQ,OAAO,CAC9C,CAEAS,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAEF,UAAU,CAAC,CAE7D;AACA,KAAM,CAAAG,MAAM,CAAGhB,EAAE,CAACa,UAAU,CAAE,CAC5BI,UAAU,CAAE,CAAC,WAAW,CAAE,SAAS,CAAC,CACpCC,oBAAoB,CAAE,CAAC,CACvBC,iBAAiB,CAAE,IAAI,CACvBC,OAAO,CAAE,KACX,CAAC,CAAC,CAEF;AACAJ,MAAM,CAACK,EAAE,CAAC,eAAe,CAAGC,KAAK,EAAK,CACpCR,OAAO,CAACQ,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAACC,OAAO,EAAID,KAAK,CAAC,CACrE,CAAC,CAAC,CAEF,cAAe,CAAAN,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}