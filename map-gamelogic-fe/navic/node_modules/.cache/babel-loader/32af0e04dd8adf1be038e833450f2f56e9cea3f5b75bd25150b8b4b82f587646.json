{"ast":null,"code":"// src/socket.js\nimport { io } from \"socket.io-client\";\n\n// Detect environment\nconst isDev = process.env.NODE_ENV === 'development';\nconst hostname = window.location.hostname;\n\n// Dynamic socket URL construction\nlet SERVER_URL;\nif (isDev) {\n  // Development: use explicit IP or localhost\n  SERVER_URL = \"http://172.24.3.238:3000\"; // Replace this with your server IP\n} else {\n  // Production: use same hostname as the web page\n  SERVER_URL = `${window.location.protocol}//${hostname}:3000`;\n}\nconsole.log(\"Connecting to socket server at:\", SERVER_URL);\nconst socket = io(SERVER_URL, {\n  reconnectionAttempts: 5,\n  reconnectionDelay: 1000,\n  transports: ['websocket', 'polling'],\n  timeout: 20000\n});\n\n// Add debug listeners\nsocket.on('connect_error', error => {\n  console.error('Socket connection error:', error);\n});\nexport default socket;","map":{"version":3,"names":["io","isDev","process","env","NODE_ENV","hostname","window","location","SERVER_URL","protocol","console","log","socket","reconnectionAttempts","reconnectionDelay","transports","timeout","on","error"],"sources":["E:/navic/src/socket.js"],"sourcesContent":["// src/socket.js\r\nimport { io } from \"socket.io-client\";\r\n\r\n// Detect environment\r\nconst isDev = process.env.NODE_ENV === 'development';\r\nconst hostname = window.location.hostname;\r\n\r\n// Dynamic socket URL construction\r\nlet SERVER_URL;\r\nif (isDev) {\r\n  // Development: use explicit IP or localhost\r\n  SERVER_URL = \"http://172.24.3.238:3000\"; // Replace this with your server IP\r\n} else {\r\n  // Production: use same hostname as the web page\r\n  SERVER_URL = `${window.location.protocol}//${hostname}:3000`;\r\n}\r\n\r\nconsole.log(\"Connecting to socket server at:\", SERVER_URL);\r\n\r\nconst socket = io(SERVER_URL, {\r\n  reconnectionAttempts: 5,\r\n  reconnectionDelay: 1000,\r\n  transports: ['websocket', 'polling'],\r\n  timeout: 20000\r\n});\r\n\r\n// Add debug listeners\r\nsocket.on('connect_error', (error) => {\r\n  console.error('Socket connection error:', error);\r\n});\r\n\r\nexport default socket;"],"mappings":"AAAA;AACA,SAASA,EAAE,QAAQ,kBAAkB;;AAErC;AACA,MAAMC,KAAK,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa;AACpD,MAAMC,QAAQ,GAAGC,MAAM,CAACC,QAAQ,CAACF,QAAQ;;AAEzC;AACA,IAAIG,UAAU;AACd,IAAIP,KAAK,EAAE;EACT;EACAO,UAAU,GAAG,0BAA0B,CAAC,CAAC;AAC3C,CAAC,MAAM;EACL;EACAA,UAAU,GAAG,GAAGF,MAAM,CAACC,QAAQ,CAACE,QAAQ,KAAKJ,QAAQ,OAAO;AAC9D;AAEAK,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEH,UAAU,CAAC;AAE1D,MAAMI,MAAM,GAAGZ,EAAE,CAACQ,UAAU,EAAE;EAC5BK,oBAAoB,EAAE,CAAC;EACvBC,iBAAiB,EAAE,IAAI;EACvBC,UAAU,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC;EACpCC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAJ,MAAM,CAACK,EAAE,CAAC,eAAe,EAAGC,KAAK,IAAK;EACpCR,OAAO,CAACQ,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;AAClD,CAAC,CAAC;AAEF,eAAeN,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}